<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.16 -->
<document source="/home/radhesh/dev/Resource-Sharing-Website/modules/models.rst">
    <section ids="module-blog.models models" names="models">
        <title>Models</title>
        <index entries="['pair',\ 'module;\ blog.models',\ 'module-blog.models',\ '',\ None]"></index>
        <index entries="['single',\ 'Task\ (class\ in\ blog.models)',\ 'blog.models.Task',\ '',\ None]"></index>
        <desc classes="py" desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" fullname="Task" ids="blog.models.Task" module="blog.models"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">blog.models.</desc_addname><desc_name xml:space="preserve">Task</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n n">id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n n">author</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n n">content</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n n">date_created</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <index entries="['single',\ 'Task.DoesNotExist',\ 'blog.models.Task.DoesNotExist',\ '',\ None]"></index>
                <desc classes="py" desctype="exception" domain="py" noindex="False" objtype="exception">
                    <desc_signature class="Task" fullname="Task.DoesNotExist" ids="blog.models.Task.DoesNotExist" module="blog.models"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">DoesNotExist</desc_name></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'Task.MultipleObjectsReturned',\ 'blog.models.Task.MultipleObjectsReturned',\ '',\ None]"></index>
                <desc classes="py" desctype="exception" domain="py" noindex="False" objtype="exception">
                    <desc_signature class="Task" fullname="Task.MultipleObjectsReturned" ids="blog.models.Task.MultipleObjectsReturned" module="blog.models"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">MultipleObjectsReturned</desc_name></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'author\ (blog.models.Task\ attribute)',\ 'blog.models.Task.author',\ '',\ None]"></index>
                <desc classes="py" desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Task" fullname="Task.author" ids="blog.models.Task.author" module="blog.models"><desc_name xml:space="preserve">author</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Accessor to the related object on the forward side of a many-to-one or
                            one-to-one (via ForwardOneToOneDescriptor subclass) relation.</paragraph>
                        <paragraph>In the example:</paragraph>
                        <literal_block force="False" language="default" linenos="False" xml:space="preserve">class Child(Model):
    parent = ForeignKey(Parent, related_name='children')</literal_block>
                        <paragraph><literal>Child.parent</literal> is a <literal>ForwardManyToOneDescriptor</literal> instance.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'author_id\ (blog.models.Task\ attribute)',\ 'blog.models.Task.author_id',\ '',\ None]"></index>
                <desc classes="py" desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Task" fullname="Task.author_id" ids="blog.models.Task.author_id" module="blog.models"><desc_name xml:space="preserve">author_id</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                            object the first time, the query is executed.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'content\ (blog.models.Task\ attribute)',\ 'blog.models.Task.content',\ '',\ None]"></index>
                <desc classes="py" desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Task" fullname="Task.content" ids="blog.models.Task.content" module="blog.models"><desc_name xml:space="preserve">content</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                            object the first time, the query is executed.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'date_created\ (blog.models.Task\ attribute)',\ 'blog.models.Task.date_created',\ '',\ None]"></index>
                <desc classes="py" desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Task" fullname="Task.date_created" ids="blog.models.Task.date_created" module="blog.models"><desc_name xml:space="preserve">date_created</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                            object the first time, the query is executed.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_next_by_date_created()\ (blog.models.Task\ method)',\ 'blog.models.Task.get_next_by_date_created',\ '',\ None]"></index>
                <desc classes="py" desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="Task" fullname="Task.get_next_by_date_created" ids="blog.models.Task.get_next_by_date_created" module="blog.models"><desc_name xml:space="preserve">get_next_by_date_created</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">*</desc_parameter><desc_parameter xml:space="preserve">field=&lt;django.db.models.fields.DateTimeField: date_created&gt;</desc_parameter><desc_parameter xml:space="preserve">is_next=True</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_previous_by_date_created()\ (blog.models.Task\ method)',\ 'blog.models.Task.get_previous_by_date_created',\ '',\ None]"></index>
                <desc classes="py" desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="Task" fullname="Task.get_previous_by_date_created" ids="blog.models.Task.get_previous_by_date_created" module="blog.models"><desc_name xml:space="preserve">get_previous_by_date_created</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">*</desc_parameter><desc_parameter xml:space="preserve">field=&lt;django.db.models.fields.DateTimeField: date_created&gt;</desc_parameter><desc_parameter xml:space="preserve">is_next=False</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'id\ (blog.models.Task\ attribute)',\ 'blog.models.Task.id',\ '',\ None]"></index>
                <desc classes="py" desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Task" fullname="Task.id" ids="blog.models.Task.id" module="blog.models"><desc_name xml:space="preserve">id</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                            object the first time, the query is executed.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'objects\ (blog.models.Task\ attribute)',\ 'blog.models.Task.objects',\ '',\ None]"></index>
                <desc classes="py" desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Task" fullname="Task.objects" ids="blog.models.Task.objects" module="blog.models"><desc_name xml:space="preserve">objects</desc_name><desc_annotation xml:space="preserve"> = &lt;django.db.models.manager.Manager object&gt;</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <target ids="module-users.models" ismod="True"></target>
        <index entries="['pair',\ 'module;\ users.models',\ 'module-users.models',\ '',\ None]"></index>
        <index entries="['single',\ 'CustomUser\ (class\ in\ users.models)',\ 'users.models.CustomUser',\ '',\ None]"></index>
        <desc classes="py" desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" fullname="CustomUser" ids="users.models.CustomUser" module="users.models"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">users.models.</desc_addname><desc_name xml:space="preserve">CustomUser</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n n">id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n n">password</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n n">last_login</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n n">is_superuser</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n n">username</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n n">first_name</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n n">last_name</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n n">is_staff</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n n">is_active</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n n">date_joined</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n n">mobile_number</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n n">address</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n n">email</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <index entries="['single',\ 'CustomUser.DoesNotExist',\ 'users.models.CustomUser.DoesNotExist',\ '',\ None]"></index>
                <desc classes="py" desctype="exception" domain="py" noindex="False" objtype="exception">
                    <desc_signature class="CustomUser" fullname="CustomUser.DoesNotExist" ids="users.models.CustomUser.DoesNotExist" module="users.models"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">DoesNotExist</desc_name></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'CustomUser.MultipleObjectsReturned',\ 'users.models.CustomUser.MultipleObjectsReturned',\ '',\ None]"></index>
                <desc classes="py" desctype="exception" domain="py" noindex="False" objtype="exception">
                    <desc_signature class="CustomUser" fullname="CustomUser.MultipleObjectsReturned" ids="users.models.CustomUser.MultipleObjectsReturned" module="users.models"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">MultipleObjectsReturned</desc_name></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'address\ (users.models.CustomUser\ attribute)',\ 'users.models.CustomUser.address',\ '',\ None]"></index>
                <desc classes="py" desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="CustomUser" fullname="CustomUser.address" ids="users.models.CustomUser.address" module="users.models"><desc_name xml:space="preserve">address</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                            object the first time, the query is executed.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'emailaddress_set\ (users.models.CustomUser\ attribute)',\ 'users.models.CustomUser.emailaddress_set',\ '',\ None]"></index>
                <desc classes="py" desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="CustomUser" fullname="CustomUser.emailaddress_set" ids="users.models.CustomUser.emailaddress_set" module="users.models"><desc_name xml:space="preserve">emailaddress_set</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Accessor to the related objects manager on the reverse side of a
                            many-to-one relation.</paragraph>
                        <paragraph>In the example:</paragraph>
                        <literal_block force="False" language="default" linenos="False" xml:space="preserve">class Child(Model):
    parent = ForeignKey(Parent, related_name='children')</literal_block>
                        <paragraph><literal>Parent.children</literal> is a <literal>ReverseManyToOneDescriptor</literal> instance.</paragraph>
                        <paragraph>Most of the implementation is delegated to a dynamically defined manager
                            class built by <literal>create_forward_many_to_many_manager()</literal> defined below.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_next_by_date_joined()\ (users.models.CustomUser\ method)',\ 'users.models.CustomUser.get_next_by_date_joined',\ '',\ None]"></index>
                <desc classes="py" desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="CustomUser" fullname="CustomUser.get_next_by_date_joined" ids="users.models.CustomUser.get_next_by_date_joined" module="users.models"><desc_name xml:space="preserve">get_next_by_date_joined</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">*</desc_parameter><desc_parameter xml:space="preserve">field=&lt;django.db.models.fields.DateTimeField: date_joined&gt;</desc_parameter><desc_parameter xml:space="preserve">is_next=True</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_previous_by_date_joined()\ (users.models.CustomUser\ method)',\ 'users.models.CustomUser.get_previous_by_date_joined',\ '',\ None]"></index>
                <desc classes="py" desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="CustomUser" fullname="CustomUser.get_previous_by_date_joined" ids="users.models.CustomUser.get_previous_by_date_joined" module="users.models"><desc_name xml:space="preserve">get_previous_by_date_joined</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">*</desc_parameter><desc_parameter xml:space="preserve">field=&lt;django.db.models.fields.DateTimeField: date_joined&gt;</desc_parameter><desc_parameter xml:space="preserve">is_next=False</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'groups\ (users.models.CustomUser\ attribute)',\ 'users.models.CustomUser.groups',\ '',\ None]"></index>
                <desc classes="py" desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="CustomUser" fullname="CustomUser.groups" ids="users.models.CustomUser.groups" module="users.models"><desc_name xml:space="preserve">groups</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Accessor to the related objects manager on the forward and reverse sides of
                            a many-to-many relation.</paragraph>
                        <paragraph>In the example:</paragraph>
                        <literal_block force="False" language="default" linenos="False" xml:space="preserve">class Pizza(Model):
    toppings = ManyToManyField(Topping, related_name='pizzas')</literal_block>
                        <paragraph><literal>Pizza.toppings</literal> and <literal>Topping.pizzas</literal> are <literal>ManyToManyDescriptor</literal>
                            instances.</paragraph>
                        <paragraph>Most of the implementation is delegated to a dynamically defined manager
                            class built by <literal>create_forward_many_to_many_manager()</literal> defined below.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'id\ (users.models.CustomUser\ attribute)',\ 'users.models.CustomUser.id',\ '',\ None]"></index>
                <desc classes="py" desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="CustomUser" fullname="CustomUser.id" ids="users.models.CustomUser.id" module="users.models"><desc_name xml:space="preserve">id</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                            object the first time, the query is executed.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'logentry_set\ (users.models.CustomUser\ attribute)',\ 'users.models.CustomUser.logentry_set',\ '',\ None]"></index>
                <desc classes="py" desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="CustomUser" fullname="CustomUser.logentry_set" ids="users.models.CustomUser.logentry_set" module="users.models"><desc_name xml:space="preserve">logentry_set</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Accessor to the related objects manager on the reverse side of a
                            many-to-one relation.</paragraph>
                        <paragraph>In the example:</paragraph>
                        <literal_block force="False" language="default" linenos="False" xml:space="preserve">class Child(Model):
    parent = ForeignKey(Parent, related_name='children')</literal_block>
                        <paragraph><literal>Parent.children</literal> is a <literal>ReverseManyToOneDescriptor</literal> instance.</paragraph>
                        <paragraph>Most of the implementation is delegated to a dynamically defined manager
                            class built by <literal>create_forward_many_to_many_manager()</literal> defined below.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'mobile_number\ (users.models.CustomUser\ attribute)',\ 'users.models.CustomUser.mobile_number',\ '',\ None]"></index>
                <desc classes="py" desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="CustomUser" fullname="CustomUser.mobile_number" ids="users.models.CustomUser.mobile_number" module="users.models"><desc_name xml:space="preserve">mobile_number</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                            object the first time, the query is executed.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'task_set\ (users.models.CustomUser\ attribute)',\ 'users.models.CustomUser.task_set',\ '',\ None]"></index>
                <desc classes="py" desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="CustomUser" fullname="CustomUser.task_set" ids="users.models.CustomUser.task_set" module="users.models"><desc_name xml:space="preserve">task_set</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Accessor to the related objects manager on the reverse side of a
                            many-to-one relation.</paragraph>
                        <paragraph>In the example:</paragraph>
                        <literal_block force="False" language="default" linenos="False" xml:space="preserve">class Child(Model):
    parent = ForeignKey(Parent, related_name='children')</literal_block>
                        <paragraph><literal>Parent.children</literal> is a <literal>ReverseManyToOneDescriptor</literal> instance.</paragraph>
                        <paragraph>Most of the implementation is delegated to a dynamically defined manager
                            class built by <literal>create_forward_many_to_many_manager()</literal> defined below.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'user_permissions\ (users.models.CustomUser\ attribute)',\ 'users.models.CustomUser.user_permissions',\ '',\ None]"></index>
                <desc classes="py" desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="CustomUser" fullname="CustomUser.user_permissions" ids="users.models.CustomUser.user_permissions" module="users.models"><desc_name xml:space="preserve">user_permissions</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Accessor to the related objects manager on the forward and reverse sides of
                            a many-to-many relation.</paragraph>
                        <paragraph>In the example:</paragraph>
                        <literal_block force="False" language="default" linenos="False" xml:space="preserve">class Pizza(Model):
    toppings = ManyToManyField(Topping, related_name='pizzas')</literal_block>
                        <paragraph><literal>Pizza.toppings</literal> and <literal>Topping.pizzas</literal> are <literal>ManyToManyDescriptor</literal>
                            instances.</paragraph>
                        <paragraph>Most of the implementation is delegated to a dynamically defined manager
                            class built by <literal>create_forward_many_to_many_manager()</literal> defined below.</paragraph>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'userdata\ (class\ in\ users.models)',\ 'users.models.userdata',\ '',\ None]"></index>
        <desc classes="py" desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" fullname="userdata" ids="users.models.userdata" module="users.models"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">users.models.</desc_addname><desc_name xml:space="preserve">userdata</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n n">id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n n">name</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n n">email</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n n">content</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <index entries="['single',\ 'userdata.DoesNotExist',\ 'users.models.userdata.DoesNotExist',\ '',\ None]"></index>
                <desc classes="py" desctype="exception" domain="py" noindex="False" objtype="exception">
                    <desc_signature class="userdata" fullname="userdata.DoesNotExist" ids="users.models.userdata.DoesNotExist" module="users.models"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">DoesNotExist</desc_name></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'userdata.MultipleObjectsReturned',\ 'users.models.userdata.MultipleObjectsReturned',\ '',\ None]"></index>
                <desc classes="py" desctype="exception" domain="py" noindex="False" objtype="exception">
                    <desc_signature class="userdata" fullname="userdata.MultipleObjectsReturned" ids="users.models.userdata.MultipleObjectsReturned" module="users.models"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">MultipleObjectsReturned</desc_name></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'content\ (users.models.userdata\ attribute)',\ 'users.models.userdata.content',\ '',\ None]"></index>
                <desc classes="py" desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="userdata" fullname="userdata.content" ids="users.models.userdata.content" module="users.models"><desc_name xml:space="preserve">content</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                            object the first time, the query is executed.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'email\ (users.models.userdata\ attribute)',\ 'users.models.userdata.email',\ '',\ None]"></index>
                <desc classes="py" desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="userdata" fullname="userdata.email" ids="users.models.userdata.email" module="users.models"><desc_name xml:space="preserve">email</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                            object the first time, the query is executed.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'id\ (users.models.userdata\ attribute)',\ 'users.models.userdata.id',\ '',\ None]"></index>
                <desc classes="py" desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="userdata" fullname="userdata.id" ids="users.models.userdata.id" module="users.models"><desc_name xml:space="preserve">id</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                            object the first time, the query is executed.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'name\ (users.models.userdata\ attribute)',\ 'users.models.userdata.name',\ '',\ None]"></index>
                <desc classes="py" desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="userdata" fullname="userdata.name" ids="users.models.userdata.name" module="users.models"><desc_name xml:space="preserve">name</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                            object the first time, the query is executed.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'objects\ (users.models.userdata\ attribute)',\ 'users.models.userdata.objects',\ '',\ None]"></index>
                <desc classes="py" desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="userdata" fullname="userdata.objects" ids="users.models.userdata.objects" module="users.models"><desc_name xml:space="preserve">objects</desc_name><desc_annotation xml:space="preserve"> = &lt;django.db.models.manager.Manager object&gt;</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
    </section>
</document>
